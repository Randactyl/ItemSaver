<GuiXml>
	<Controls>
		<!--inherits="ZO_CustomDialogBase"-->
		<Control name="IS_ColorPickerControl" virtual="true">
            <Dimensions x="192" y="192" />

            <OnInitialized>
				local oldInit = ZO_ColorPicker.Initialize

				ZO_ColorPicker.Initialize = function(self, control)
					self.control = control
					local content = self.control:GetNamedChild("Content")
					self.content = content
					self.colorSelect = content:GetNamedChild("ColorSelect")
					self.colorSelectThumb = self.colorSelect:GetNamedChild("Thumb")

					self.colorSelect:SetColorWheelThumbTextureControl(self.colorSelectThumb)

					self.valueSlider = content:GetNamedChild("Value")
					self.valueSlider:GetThumbTextureControl():SetDrawLayer(3)
					self.valueTexture = self.valueSlider:GetNamedChild("Texture")

					self.alphaLabel = content:GetNamedChild("AlphaLabel")
					self.alphaSlider = content:GetNamedChild("Alpha")
					self.alphaSlider:GetThumbTextureControl():SetDrawLayer(3)
					self.alphaTexture = self.alphaSlider:GetNamedChild("Texture")

					local preview = content:GetNamedChild("Preview")
					self.previewInitialTexture = preview:GetNamedChild("TextureBottom")
					self.previewCurrentTexture = preview:GetNamedChild("TextureTop")

					local function SetColorFromSpinner(r, g, b, a)
						if not self.isUpdatingColors then
							self:SetColor(r, g, b, a)
						end
					end

					local spinners = content:GetNamedChild("Spinners")
					self.redSpinner = ZO_Spinner:New(spinners:GetNamedChild("Red"), 0, 255)
					self.redSpinner:RegisterCallback("OnValueChanged", function(value)
						local r, g, b, a = self:GetColors()
						SetColorFromSpinner(value / 255, g, b, a)
					end)
					self.redSpinner:SetNormalColor(ZO_ColorDef:New(1, .2, .2, 1))

					self.greenSpinner = ZO_Spinner:New(spinners:GetNamedChild("Green"), 0, 255)
					self.greenSpinner:RegisterCallback("OnValueChanged", function(value)
						local r, g, b, a = self:GetColors()
						SetColorFromSpinner(r, value / 255, b, a)
					end)
					self.greenSpinner:SetNormalColor(ZO_ColorDef:New(.2, 1, .2, 1))

					self.blueSpinner = ZO_Spinner:New(spinners:GetNamedChild("Blue"), 0, 255)
					self.blueSpinner:RegisterCallback("OnValueChanged", function(value)
						local r, g, b, a = self:GetColors()
						SetColorFromSpinner(r, g, value / 255, a)
					end)
					self.blueSpinner:SetNormalColor(ZO_ColorDef:New(.2, .2, 1, 1))

					self.alphaSpinner = ZO_Spinner:New(spinners:GetNamedChild("Alpha"), 0, 255)
					self.alphaSpinner:RegisterCallback("OnValueChanged", function(value)
						local r, g, b, a = self:GetColors()
						SetColorFromSpinner(r, g, b, value / 255)
					end)
				end

                IS_COLOR_PICKER = ZO_ColorPicker:New(self)

				ZO_ColorPicker.Initialize = oldInit
            </OnInitialized>
            <Controls>
                <Control name="$(parent)Content">
					<Anchor point="TOP" relativeTo="$(parent)" relativePoint="TOP" />
					<Dimensions x="192" y="192" />

                    <Controls>
                        <ColorSelect name="$(parent)ColorSelect" mouseEnabled="true">
                            <Anchor point="TOP" relativeTo="$(parent)" relativePoint="TOP" />
                            <Dimensions x="128" y="128" />

                            <OnColorSelected>
                                IS_COLOR_PICKER:OnColorSet(r, g, b)
                            </OnColorSelected>

                            <Controls>
                                <Texture name="$(parent)Thumb" textureFile="EsoUI/Art/Miscellaneous/colorPicker_pip.dds" layer="2">
                                    <Dimensions x="32" y="32" />
                                </Texture>
                            </Controls>
                        </ColorSelect>

                        <Control name="$(parent)Preview">
                            <Dimensions x="64" y="64" />
                            <Anchor point="RIGHT" relativeTo="$(parent)ColorSelect" relativePoint="LEFT" offsetX="-25" />

                            <Controls>
                                <Texture name="$(parent)Border" textureFile="EsoUI/Art/Miscellaneous/colorPicker_swatchFrame.dds">
                                    <Dimensions x="64" y="64" />
                                    <Anchor point="CENTER" />
                                </Texture>

                                <Texture name="$(parent)TextureTop" layer="OVERLAY">
                                    <Dimensions x="58" y="29" />
                                    <Anchor point="TOP" offsetY="3" />
                                </Texture>
                                <Label name="$(parent)TopLabel" font="ZoFontWinH4" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" modifyTextType="UPPERCASE" text="SI_COLOR_PICKER_NEW">
                                    <Anchor point="BOTTOM" relativeTo="$(parent)TextureTop" relativePoint="TOP" offsetY="-5" />
                                </Label>

                                <Texture name="$(parent)TextureBottom" layer="OVERLAY">
                                    <Dimensions x="58" y="29" />
                                    <Anchor point="BOTTOM" offsetY="-3" />
                                </Texture>
                                <Label name="$(parent)BottomLabel" font="ZoFontWinH4" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" modifyTextType="UPPERCASE" text="SI_COLOR_PICKER_CURRENT">
                                    <Anchor point="TOP" relativeTo="$(parent)TextureBottom" relativePoint="BOTTOM" offsetY="5" />
                                </Label>
                            </Controls>
                        </Control>

                        <Slider name="$(parent)Value" inherits="ZO_ColorPickerControlVerticalSliderTemplate">
                            <Anchor point="LEFT" relativeTo="$(parent)ColorSelect" relativePoint="RIGHT" offsetX="35" />

                            <OnValueChanged>
                                if eventReason == EVENT_REASON_HARDWARE then
                                    IS_COLOR_PICKER:OnValueSet(1 - value)
                                end
                            </OnValueChanged>
                        </Slider>

                        <Slider name="$(parent)Alpha" inherits="ZO_ColorPickerControlHorizontalSliderTemplate" hidden="true">
                            <Anchor point="TOP" relativeTo="$(parent)ColorSelect" relativePoint="BOTTOM" offsetY="15" />
                            <OnValueChanged>
                                if eventReason == EVENT_REASON_HARDWARE then
                                    IS_COLOR_PICKER:OnAlphaSet(value)
                                end
                            </OnValueChanged>
                        </Slider>
                        <Label name="$(parent)AlphaLabel" font="ZoFontWinH4" color="INTERFACE_COLOR_TYPE_TEXT_COLORS:INTERFACE_TEXT_COLOR_SELECTED" horizontalAlignment="RIGHT" modifyTextType="UPPERCASE" text="SI_COLOR_PICKER_ALPHA" hidden="true">
                            <Anchor point="TOPRIGHT" relativeTo="$(parent)Alpha" relativePoint="TOPLEFT" offsetX="-10" />
						</Label>

                        <Control name="$(parent)Spinners" resizeToFitDescendents="true">
                            <Anchor point="BOTTOM" relativeTo="$(parent)" relativePoint="BOTTOM"/>
                            <Controls>
                                <Control name="$(parent)Red" inherits="ZO_EditSpinner">
                                    <Anchor point="LEFT" />
                                </Control>

                                <Control name="$(parent)Green" inherits="ZO_EditSpinner">
                                    <Anchor point="LEFT" relativeTo="$(parent)Red" relativePoint="RIGHT" offsetX="10" />
                                </Control>

                                <Control name="$(parent)Blue" inherits="ZO_EditSpinner">
                                    <Anchor point="LEFT" relativeTo="$(parent)Green" relativePoint="RIGHT" offsetX="10" />
                                </Control>

                                <Control name="$(parent)Alpha" inherits="ZO_EditSpinner" hidden="true">
                                    <Anchor point="LEFT" relativeTo="$(parent)Blue" relativePoint="RIGHT" offsetX="10" />
								</Control>
                            </Controls>
                        </Control>
                    </Controls>
                </Control>
            </Controls>
        </Control>

		<TopLevelControl name="ItemSaverDialog" inherits="ZO_CustomDialogBase">
			<OnInitialized>
				ItemSaver.dialog.SetupDialog(self)
			</OnInitialized>

			<Controls>
				<Control name="$(parent)Cancel" inherits="ZO_CustomDialogButton" />
				<Control name="$(parent)Create" inherits="ZO_CustomDialogButton" />
			</Controls>
		</TopLevelControl>
	</Controls>
</GuiXml>